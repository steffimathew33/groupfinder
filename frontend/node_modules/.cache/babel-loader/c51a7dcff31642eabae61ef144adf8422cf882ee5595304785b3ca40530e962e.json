{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steffi\\\\GithubProjects\\\\groupfinder\\\\frontend\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getUser } from \"../api\"; // Adjust path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Profile() {\n  _s();\n  const [userData, setUserData] = useState(null); // To store user data\n  const [error, setError] = useState(null); // To handle errors\n\n  useEffect(() => {\n    async function fetchUserData() {\n      try {\n        const userId = \"12345\"; // Replace with the actual user ID (e.g., from auth token)\n        const data = await getUser(userId);\n        setUserData(data); // Set fetched data\n      } catch (err) {\n        setError(\"Failed to fetch user data\");\n        console.error(err);\n      }\n    }\n    fetchUserData(); // Fetch user data when the component mounts\n  }, []); // Empty dependency array ensures this runs only once\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this); // Display error if fetching fails\n  }\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this); // Display a loading indicator while fetching\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userData.profilePicture || \"/default-profile.png\" // Fallback image\n        ,\n        alt: `${userData.name}'s profile`,\n        style: {\n          width: \"150px\",\n          height: \"150px\",\n          borderRadius: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bio: \", userData.bio || \"No bio available\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"/HRcFU7gqxiwr4XfW3ENXlP9MF0=\");\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","getUser","jsxDEV","_jsxDEV","Profile","_s","userData","setUserData","error","setError","fetchUserData","userId","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","profilePicture","alt","name","style","width","height","borderRadius","email","bio","_c","$RefreshReg$"],"sources":["C:/Users/Steffi/GithubProjects/groupfinder/frontend/src/pages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getUser } from \"../api\"; // Adjust path if needed\r\n\r\nexport function Profile() {\r\n    const [userData, setUserData] = useState(null); // To store user data\r\n    const [error, setError] = useState(null); // To handle errors\r\n\r\n    useEffect(() => {\r\n        async function fetchUserData() {\r\n            try {\r\n                const userId = \"12345\"; // Replace with the actual user ID (e.g., from auth token)\r\n                const data = await getUser(userId);\r\n                setUserData(data); // Set fetched data\r\n            } catch (err) {\r\n                setError(\"Failed to fetch user data\");\r\n                console.error(err);\r\n            }\r\n        }\r\n\r\n        fetchUserData(); // Fetch user data when the component mounts\r\n    }, []); // Empty dependency array ensures this runs only once\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>; // Display error if fetching fails\r\n    }\r\n\r\n    if (!userData) {\r\n        return <div>Loading...</div>; // Display a loading indicator while fetching\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile Page</h1>\r\n            <div>\r\n                <img\r\n                    src={userData.profilePicture || \"/default-profile.png\"} // Fallback image\r\n                    alt={`${userData.name}'s profile`}\r\n                    style={{ width: \"150px\", height: \"150px\", borderRadius: \"50%\" }}\r\n                />\r\n                <h2>{userData.name}</h2>\r\n                <p>Email: {userData.email}</p>\r\n                <p>Bio: {userData.bio || \"No bio available\"}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACZ,eAAeU,aAAaA,CAAA,EAAG;MAC3B,IAAI;QACA,MAAMC,MAAM,GAAG,OAAO,CAAC,CAAC;QACxB,MAAMC,IAAI,GAAG,MAAMX,OAAO,CAACU,MAAM,CAAC;QAClCJ,WAAW,CAACK,IAAI,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVJ,QAAQ,CAAC,2BAA2B,CAAC;QACrCK,OAAO,CAACN,KAAK,CAACK,GAAG,CAAC;MACtB;IACJ;IAEAH,aAAa,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIF,KAAK,EAAE;IACP,oBAAOL,OAAA;MAAAY,QAAA,GAAK,SAAO,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC,CAAC;EACtC;EAEA,IAAI,CAACb,QAAQ,EAAE;IACX,oBAAOH,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,oBACIhB,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhB,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QACIiB,GAAG,EAAEd,QAAQ,CAACe,cAAc,IAAI,sBAAuB,CAAC;QAAA;QACxDC,GAAG,EAAE,GAAGhB,QAAQ,CAACiB,IAAI,YAAa;QAClCC,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,OAAO;UAAEC,YAAY,EAAE;QAAM;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eACFhB,OAAA;QAAAY,QAAA,EAAKT,QAAQ,CAACiB;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBhB,OAAA;QAAAY,QAAA,GAAG,SAAO,EAACT,QAAQ,CAACsB,KAAK;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BhB,OAAA;QAAAY,QAAA,GAAG,OAAK,EAACT,QAAQ,CAACuB,GAAG,IAAI,kBAAkB;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACd,EAAA,CA1CeD,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/tylntay/groupfinder/frontend/src/pages/Profile.jsx\",\n  _s = $RefreshSig$();\nimport './Profile.css';\nimport React, { useState, useEffect } from \"react\";\nimport { getUser } from \"../api\"; // Ensure the path is correct to your api.js\nimport \"./Profile.css\"; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Profile() {\n  _s();\n  const [userData, setUserData] = useState(null); // To store the fetched user data\n  const [error, setError] = useState(null); // To handle any errors\n\n  const userId = \"674d39026b8894d40619ed41\"; // Steffi Mathew's user ID from the MongoDB screenshot\n\n  useEffect(() => {\n    document.body.classList.add(\"profile-page\");\n\n    // Clean up when component unmounts\n    return () => {\n      document.body.classList.remove(\"profile-page\");\n    };\n  }, []);\n  useEffect(() => {\n    async function fetchUserData() {\n      try {\n        const data = await getUser(userId); // Get user data by ID\n        console.log(data); // Log for debugging\n        setUserData(data); // Set the fetched data\n      } catch (err) {\n        setError(\"Failed to fetch user data\");\n        console.error(err); // Log error for debugging\n      }\n    }\n    fetchUserData(); // Call function to fetch user data\n  }, []); // Empty dependency array means this runs once when the component mounts\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this); // Show error if fetching fails\n  }\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this); // Show loading message while data is being fetched\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userData.profilePicture || \"/default-profile.png\" // Fallback if profilePicture is null\n        ,\n        alt: `${userData.firstName} ${userData.lastName}'s profile`,\n        className: \"profile-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `${userData.firstName} ${userData.lastName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Major: \", userData.major]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Graduation Year: \", userData.gradYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bio: \", userData.bio || \"No bio available\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Signup Date: \", new Date(userData.signupDate).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"Y86MV+O83+d8fzwIUMmx743GIJg=\");\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","getUser","jsxDEV","_jsxDEV","Profile","_s","userData","setUserData","error","setError","userId","document","body","classList","add","remove","fetchUserData","data","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","profilePicture","alt","firstName","lastName","email","major","gradYear","bio","Date","signupDate","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/tylntay/groupfinder/frontend/src/pages/Profile.jsx"],"sourcesContent":["import './Profile.css';\nimport React, { useState, useEffect } from \"react\";\nimport { getUser } from \"../api\"; // Ensure the path is correct to your api.js\nimport \"./Profile.css\"; // Import the CSS file for styling\n\nexport function Profile() {\n    const [userData, setUserData] = useState(null); // To store the fetched user data\n    const [error, setError] = useState(null); // To handle any errors\n\n    const userId = \"674d39026b8894d40619ed41\"; // Steffi Mathew's user ID from the MongoDB screenshot\n\n    useEffect(() => {\n        document.body.classList.add(\"profile-page\");\n        \n        // Clean up when component unmounts\n        return () => {\n            document.body.classList.remove(\"profile-page\");\n        };\n    }, []);\n    \n    useEffect(() => {\n        async function fetchUserData() {\n            try {\n                const data = await getUser(userId); // Get user data by ID\n                console.log(data); // Log for debugging\n                setUserData(data); // Set the fetched data\n            } catch (err) {\n                setError(\"Failed to fetch user data\");\n                console.error(err); // Log error for debugging\n            }\n        }\n\n        fetchUserData(); // Call function to fetch user data\n    }, []); // Empty dependency array means this runs once when the component mounts\n\n    if (error) {\n        return <div>Error: {error}</div>; // Show error if fetching fails\n    }\n\n    if (!userData) {\n        return <div>Loading...</div>; // Show loading message while data is being fetched\n    }\n\n    return (\n        <div className=\"profile-container\">\n            <h1>Profile Page</h1>\n            <div className=\"profile-details\">\n                <img\n                    src={userData.profilePicture || \"/default-profile.png\"} // Fallback if profilePicture is null\n                    alt={`${userData.firstName} ${userData.lastName}'s profile`}\n                    className=\"profile-image\"\n                />\n                <h2>{`${userData.firstName} ${userData.lastName}`}</h2>\n                <p>Email: {userData.email}</p>\n                <p>Major: {userData.major}</p>\n                <p>Graduation Year: {userData.gradYear}</p>\n                <p>Bio: {userData.bio || \"No bio available\"}</p>\n                <p>Signup Date: {new Date(userData.signupDate).toLocaleDateString()}</p>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
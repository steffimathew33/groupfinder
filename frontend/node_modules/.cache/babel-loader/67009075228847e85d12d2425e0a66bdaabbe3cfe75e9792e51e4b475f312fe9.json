{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steffi\\\\GithubProjects\\\\groupfinder\\\\frontend\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getUser } from \"../api\"; // Ensure the path is correct to your api.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Profile() {\n  _s();\n  const [userData, setUserData] = useState(null); // To store the fetched user data\n  const [error, setError] = useState(null); // To handle any errors\n\n  // You can dynamically fetch the user ID if you store it elsewhere (e.g., from auth context or session)\n  const userId = \"674d39026b8894d40619ed41\"; // Katie Dinh's user ID from the MongoDB screenshot\n\n  useEffect(() => {\n    async function fetchUserData() {\n      try {\n        const data = await getUser(userId); // Get user data by ID\n        console.log(data); // Log for debugging\n        setUserData(data); // Set the fetched data\n      } catch (err) {\n        setError(\"Failed to fetch user data\");\n        console.error(err); // Log error for debugging\n      }\n    }\n    fetchUserData(); // Call function to fetch user data\n  }, []); // Empty dependency array means this runs once when the component mounts\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this); // Show error if fetching fails\n  }\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this); // Show loading message while data is being fetched\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userData.profilePicture || \"/default-profile.png\" // Fallback if profilePicture is null\n        ,\n        alt: `${userData.firstName} ${userData.lastName}'s profile`,\n        style: {\n          width: \"150px\",\n          height: \"150px\",\n          borderRadius: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `${userData.firstName} ${userData.lastName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Major: \", userData.major]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Graduation Year: \", userData.gradYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bio: \", userData.bio || \"No bio available\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Signup Date: \", new Date(userData.signupDate).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"/HRcFU7gqxiwr4XfW3ENXlP9MF0=\");\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","getUser","jsxDEV","_jsxDEV","Profile","_s","userData","setUserData","error","setError","userId","fetchUserData","data","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","src","profilePicture","alt","firstName","lastName","style","width","height","borderRadius","email","major","gradYear","bio","Date","signupDate","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Steffi/GithubProjects/groupfinder/frontend/src/pages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getUser } from \"../api\"; // Ensure the path is correct to your api.js\r\n\r\nexport function Profile() {\r\n    const [userData, setUserData] = useState(null); // To store the fetched user data\r\n    const [error, setError] = useState(null); // To handle any errors\r\n\r\n    // You can dynamically fetch the user ID if you store it elsewhere (e.g., from auth context or session)\r\n    const userId = \"674d39026b8894d40619ed41\"; // Katie Dinh's user ID from the MongoDB screenshot\r\n\r\n    useEffect(() => {\r\n        async function fetchUserData() {\r\n            try {\r\n                const data = await getUser(userId); // Get user data by ID\r\n                console.log(data); // Log for debugging\r\n                setUserData(data); // Set the fetched data\r\n            } catch (err) {\r\n                setError(\"Failed to fetch user data\");\r\n                console.error(err); // Log error for debugging\r\n            }\r\n        }\r\n\r\n        fetchUserData(); // Call function to fetch user data\r\n    }, []); // Empty dependency array means this runs once when the component mounts\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>; // Show error if fetching fails\r\n    }\r\n\r\n    if (!userData) {\r\n        return <div>Loading...</div>; // Show loading message while data is being fetched\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile Page</h1>\r\n            <div>\r\n                <img\r\n                    src={userData.profilePicture || \"/default-profile.png\"} // Fallback if profilePicture is null\r\n                    alt={`${userData.firstName} ${userData.lastName}'s profile`}\r\n                    style={{ width: \"150px\", height: \"150px\", borderRadius: \"50%\" }}\r\n                />\r\n                <h2>{`${userData.firstName} ${userData.lastName}`}</h2>\r\n                <p>Email: {userData.email}</p>\r\n                <p>Major: {userData.major}</p>\r\n                <p>Graduation Year: {userData.gradYear}</p>\r\n                <p>Bio: {userData.bio || \"No bio available\"}</p>\r\n                <p>Signup Date: {new Date(userData.signupDate).toLocaleDateString()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
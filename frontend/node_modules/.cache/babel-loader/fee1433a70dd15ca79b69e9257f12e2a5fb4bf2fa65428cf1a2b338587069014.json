{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kryst\\\\35LProj\\\\groupfinder\\\\frontend\\\\src\\\\components\\\\CreateGroup.jsx\",\n  _s = $RefreshSig$();\nimport { createGroup } from \"../api\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreateGroup() {\n  _s();\n  const [group, setGroup] = useState({\n    groupName: \"\",\n    // Group name field\n    description: \"\",\n    // Description of the group\n    createdBy: \"\",\n    // User ID or name of the creator (if needed for display)\n    projectTitle: \"\",\n    // Project title\n    tags: \"\",\n    // Tags, can be a comma-separated string or array\n    isFull: false // Boolean to indicate if the group is full (default false)\n  });\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setGroup(prevState => ({\n      ...prevState,\n      [name]: name === \"tags\" ? value.split(\",\").map(tag => tag.trim()) : value\n    }));\n  }\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let response = await createGroup(group);\n    if (response.status !== 200) {\n      alert(\"Account could not be created.\");\n    }\n    console.log(group);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"groupName\",\n      placeholder: \"Group Name\",\n      value: group.groupName,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Description\",\n      value: group.description,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"projectTitle\",\n      placeholder: \"Project Title\",\n      value: group.projectTitle,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"tags\",\n      placeholder: \"Tags (comma-separated)\",\n      value: group.tags.join(\", \"),\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateGroup, \"Bwgloznc1ORt59L6mDsaqM0NDb8=\");\n_c = CreateGroup;\nvar _c;\n$RefreshReg$(_c, \"CreateGroup\");","map":{"version":3,"names":["createGroup","useState","jsxDEV","_jsxDEV","CreateGroup","_s","group","setGroup","groupName","description","createdBy","projectTitle","tags","isFull","handleChange","e","name","value","target","prevState","split","map","tag","trim","handleSubmit","preventDefault","response","status","alert","console","log","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","join","_c","$RefreshReg$"],"sources":["C:/Users/kryst/35LProj/groupfinder/frontend/src/components/CreateGroup.jsx"],"sourcesContent":["import { createGroup } from \"../api\"\r\nimport { useState } from \"react\"\r\n\r\nexport function CreateGroup() {\r\n\r\n    const [group, setGroup] = useState({\r\n        groupName: \"\",       // Group name field\r\n        description: \"\",     // Description of the group\r\n        createdBy: \"\",       // User ID or name of the creator (if needed for display)\r\n        projectTitle: \"\",    // Project title\r\n        tags: \"\",            // Tags, can be a comma-separated string or array\r\n        isFull: false        // Boolean to indicate if the group is full (default false)\r\n    });\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target;\r\n        setGroup(prevState => ({\r\n            ...prevState,\r\n            [name]: name === \"tags\" ? value.split(\",\").map(tag => tag.trim()) : value\r\n        }));\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let response = await createGroup(group);\r\n        if (response.status !== 200) {\r\n            alert(\"Account could not be created.\");\r\n        }\r\n        console.log(group);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                name=\"groupName\"\r\n                placeholder=\"Group Name\"\r\n                value={group.groupName}\r\n                onChange={handleChange}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"description\"\r\n                placeholder=\"Description\"\r\n                value={group.description}\r\n                onChange={handleChange}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"projectTitle\"\r\n                placeholder=\"Project Title\"\r\n                value={group.projectTitle}\r\n                onChange={handleChange}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"tags\"\r\n                placeholder=\"Tags (comma-separated)\"\r\n                value={group.tags.join(\", \")}\r\n                onChange={handleChange}\r\n            />\r\n            <button type=\"submit\">Create Group</button>\r\n        </form>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kryst\\\\35LProj\\\\groupfinder\\\\frontend\\\\src\\\\components\\\\Layout.jsx\",\n  _s = $RefreshSig$();\nimport { Navbar } from \"./Navbar\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\n//Parent component to all pages that have a navbar on them.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Layout() {\n  _s();\n  let user = sessionStorage.getItem(\"User\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/\");\n    }\n  }, [user]); //If the user is not logged in (aka no token in session storage, navigate back to login)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Layout, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["Navbar","Outlet","useNavigate","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Layout","_s","user","sessionStorage","getItem","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kryst/35LProj/groupfinder/frontend/src/components/Layout.jsx"],"sourcesContent":["\r\nimport { Navbar } from \"./Navbar\"\r\nimport{ Outlet, useNavigate } from \"react-router-dom\"\r\nimport { useEffect } from \"react\";\r\n\r\n//Parent component to all pages that have a navbar on them.\r\nexport function Layout() {\r\n\r\n    let user = sessionStorage.getItem(\"User\")\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n        navigate(\"/\")\r\n        }\r\n    }, [user]) //If the user is not logged in (aka no token in session storage, navigate back to login)\r\n    \r\n    return (\r\n        <>\r\n            <Navbar/>\r\n            <Outlet/>\r\n\r\n        </>\r\n    )\r\n}"],"mappings":";;AACA,SAASA,MAAM,QAAQ,UAAU;AACjC,SAAQC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AACrD,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAErB,IAAIC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACO,IAAI,EAAE;MACXG,QAAQ,CAAC,GAAG,CAAC;IACb;EACJ,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC,EAAC;;EAEX,oBACIL,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACIT,OAAA,CAACL,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTb,OAAA,CAACJ,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAEX,CAAC;AAEX;AAACT,EAAA,CAlBeD,MAAM;EAAA,QAGDN,WAAW;AAAA;AAAAiB,EAAA,GAHhBX,MAAM;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}